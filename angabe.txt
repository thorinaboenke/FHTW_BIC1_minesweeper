
Minesweeper
Task Specification

Provide a game where players can play Minesweeper. The game generates a playing field of 10x10 fields and 20 hidden mines. The player has to enter coordinates of a field to check if there are mines or not.

    Main Task (30 points)

        The program dynamically generates the matrix.

        Then the 20 mines are randomly distributed within the matrix.

        Calculations of surrounding mines are done and value of nearby mines for each cell is stored in the matrix. If there are no mines a 0 should be stored.

        The matrix should furthermore have a flag for each cell if its already opened by the player or not.

        When a new game is started one random cell is shown but only if this cell contains a number unequal to zero and no mine.

        The player enters the coordinates of the field which should be opened:

            If the selected cell contains a mine, all other mines should be shown and the game is over.

            If the selected cell contains a number this cell is shown.

        The player wins the game when all cells without mines are opened.

    Task (15 points)

    Extend the program to handle the case when a cell contains a zero in a different way:

        If a selected cell contains a zero then all neighbor cells are revealed as if they were opened by the player.

        If any of these contain another zero the neighbors of that cell have to be uncovered again as well.

        This process is repeated until all cells connected to each other containing zeros are opened.

    Task (15 points)

        Extend the program to handle program arguments for a square Matrix size. (e.g., 5x5 or 15x15 etc)

        And amount of mines.

    Task (15 points)

        Extend the program that a player can mark a mine with a prefix in front of the coordinates (e.g., ?)

        A marked mine will be shown to the player.

        Show amount of mines in the game minus the amount of marked mines. Also show if this sum is negative, meaning a cell was marked as mine which does not have a mine.

        The player wins the game when all cells with mines are marked or all cells are opened which are not a mine.

    Task (15 points)

        Ask and save the names of the players.

        Generate a statistic for this player including:

            Played games

            Games won

            Games lost

            Opened cells

        This statistic has to be saved into a file named after the player.

        On start of a game when the player has entered his name, the statistic should be loaded if available.

    Task (15 points)

        Save the result of the playing field including player name into a file.

        If a user wants to abort a game save the current playing field into a file and when this player starts a new game ask him if he wants to continue.

        Then load the playing field into the matrix and let the player continue the game.

    Task (25 points)

        Extend the program to use ncurses. Description on how to use ncurses can be found here.

        Build the playing field, output of statistics etc. using ncurses functions.

Example Execution

./minesweeper 5x5 5

Example Output

Enter your name:
Susi
Welcome Susi you have no stored games to continue.
Your statistic is:
Games played: 13
Games won: 4
Games lost: 9
opened cells: 87

New game is starting using a 5x5 matrix with 5 mines:

  A B C D E
1 - - - - -
2 - - - - -
3 - - - - -
4 - 1 - - -
5 - - - - -

Please enter the cell you want to open:
B2
debug info: [B2 contains 0]

  A B C D E
1       1 -
2     1 - -
3 1   2 - -
4 - 1 - - -
5 - - - - -

Please enter the cell you want to open:
?A4
  A B C D E
1       1 -
2     1 - -
3 1   2 - -
4 ? 1 - - -
5 - - - - -


Please enter the cell you want to open:
D2
  A B C D E
1       1 -
2     1 M -
3 1   2 M -
4 M 1 - - M
5 1 - M - -

D2 contains a mine, you lost!

Player Susi
Your statistic is:
Games played: 14
Games won: 4
Games lost: 10
opened cells: 90

Do you want to start a new game?
[...]
